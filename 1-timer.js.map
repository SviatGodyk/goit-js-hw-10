{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nlet userSelectedDate = null;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  elements: {\n    days: document.querySelector('.js-timer-days'),\n    hours: document.querySelector('.js-timer-hours'),\n    minutes: document.querySelector('.js-timer-minutes'),\n    seconds: document.querySelector('.js-timer-seconds'),\n  },\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] < new Date()) {\n      return alert('Please choose a date in the future');\n    } else {\n      userSelectedDate = selectedDates[0];\n      startBtn.disabled = false;\n    }\n  },\n};\n\nconst imputEl = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button');\nstartBtn.disabled = true;\nflatpickr(imputEl, options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  imputEl.disabled = true;\n  const intervalId = setInterval(() => {\n    const diff = userSelectedDate - new Date();\n    const timeConvertMs = this.convertMs(diff);\n    this.elements.days.textContent = timeConvertMs.days;\n    this.elements.hours.textContent = timeConvertMs.hours;\n    this.elements.minutes.textContent = timeConvertMs.minutes;\n    this.elements.seconds.textContent = timeConvertMs.seconds;\n  }, 1000);\n}),\n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  };\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["userSelectedDate","options","selectedDates","startBtn","imputEl","flatpickr","diff","timeConvertMs","this"],"mappings":"wIAEA,IAAIA,EAAmB,KACvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,SAAU,CACR,KAAM,SAAS,cAAc,gBAAgB,EAC7C,MAAO,SAAS,cAAc,iBAAiB,EAC/C,QAAS,SAAS,cAAc,mBAAmB,EACnD,QAAS,SAAS,cAAc,mBAAmB,CACpD,EACD,QAAQC,EAAe,CAErB,GADA,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAI,IAAI,KACzB,OAAO,MAAM,oCAAoC,EAEjDF,EAAmBE,EAAc,CAAC,EAClCC,EAAS,SAAW,EAEvB,CACH,EAEMC,EAAU,SAAS,cAAc,kBAAkB,EACnDD,EAAW,SAAS,cAAc,QAAQ,EAChDA,EAAS,SAAW,GACpBE,EAAUD,EAASH,CAAO,EAE1BE,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAQ,SAAW,GACA,YAAY,IAAM,CACnC,MAAME,EAAON,EAAmB,IAAI,KAC9BO,EAAgBC,SAAK,UAAUF,CAAI,EACzCE,SAAK,SAAS,KAAK,YAAcD,EAAc,KAC/CC,SAAK,SAAS,MAAM,YAAcD,EAAc,MAChDC,SAAK,SAAS,QAAQ,YAAcD,EAAc,QAClDC,SAAK,SAAS,QAAQ,YAAcD,EAAc,OACnD,EAAE,GAAI,CACT,CAAC"}