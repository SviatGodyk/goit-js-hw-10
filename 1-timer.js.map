{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      userSelectedDate = selectedDates[0];\n      iziToast.success({\n        title: 'OK',\n        message: 'Valid date selected',\n      });\n      startBtn.disabled = false;\n    }\n  },\n};\n\nconst imputEl = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button');\nconst daysEl = document.querySelector('.js-timer-days');\nconst hoursEl = document.querySelector('.js-timer-hours');\nconst minutesEl = document.querySelector('.js-timer-minutes');\nconst secondsEl = document.querySelector('.js-timer-seconds');\n\nstartBtn.disabled = true;\nflatpickr(imputEl, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n\n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst addLeadingZero = value => value.toString().padStart(2, '0');\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  imputEl.disabled = true;\n  const intervalId = setInterval(() => {\n    const diff = userSelectedDate - new Date();\n\n    if (diff <= 0) {\n      clearInterval(intervalId);\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(diff);\n\n    daysEl.textContent = addLeadingZero(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n  }, 1000);\n});\n"],"names":["userSelectedDate","options","selectedDates","iziToast","startBtn","imputEl","daysEl","hoursEl","minutesEl","secondsEl","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","intervalId","diff"],"mappings":"0IAMA,IAAIA,EAAmB,KACvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAI,IAAI,KACzBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,GAEDH,EAAmBE,EAAc,CAAC,EAClCC,EAAS,QAAQ,CACf,MAAO,KACP,QAAS,qBACjB,CAAO,EACDC,EAAS,SAAW,GAEvB,CACH,EAEMC,EAAU,SAAS,cAAc,kBAAkB,EACnDD,EAAW,SAAS,cAAc,QAAQ,EAC1CE,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAU,SAAS,cAAc,iBAAiB,EAClDC,EAAY,SAAS,cAAc,mBAAmB,EACtDC,EAAY,SAAS,cAAc,mBAAmB,EAE5DL,EAAS,SAAW,GACpBM,EAAUL,EAASJ,CAAO,EAE1B,SAASU,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAiBC,GAASA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAEhEd,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAQ,SAAW,GACnB,MAAMc,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAOpB,EAAmB,IAAI,KAEpC,GAAIoB,GAAQ,EAAG,CACb,cAAcD,CAAU,EACxB,MACD,CAED,KAAM,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUS,CAAI,EAExDd,EAAO,YAAcW,EAAeJ,CAAI,EACxCN,EAAQ,YAAcU,EAAeH,CAAK,EAC1CN,EAAU,YAAcS,EAAeF,CAAO,EAC9CN,EAAU,YAAcQ,EAAeD,CAAO,CAC/C,EAAE,GAAI,CACT,CAAC"}